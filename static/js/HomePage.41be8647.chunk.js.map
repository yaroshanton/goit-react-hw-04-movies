{"version":3,"sources":["services/MoviesApi.js","components/MoviesList/MoviesList.js","views/HomePage.js"],"names":["fetchTrendMovies","axios","get","then","res","fetchMoviesDetails","movieId","fetchCurrentMovies","search","fetchMoviesByQuery","inputValue","fetchMoviesCast","fetchMoviesReviews","withRouter","movies","location","className","map","film","to","pathname","routes","id","state","from","original_title","HomePage","films","setState","data","results","this","Component"],"mappings":"yIAAA,iOAEO,SAASA,IACZ,OAAOC,IAAMC,IAAN,4FACFC,MAAK,SAAAC,GAAG,OAAIA,KAGd,SAASC,EAAmBC,GAC/B,OAAOL,IAAMC,IAAN,4CAA+CI,EAA/C,8CACFH,MAAK,SAAAC,GAAG,OAAIA,KAGd,SAASG,EAAmBC,GAC/B,OAAOP,IAAMC,IAAN,mDAAsDM,EAAtD,oEACFL,MAAK,SAAAC,GAAG,OAAIA,KAGd,SAASK,EAAmBC,GAC/B,OAAOT,IAAMC,IAAN,0DAA6DQ,EAA7D,oEAGJ,SAASC,EAAgBL,GAC5B,OAAOL,IAAMC,IAAN,4CAA+CI,EAA/C,sDAGJ,SAASM,EAAmBN,GAC/B,OAAOL,IAAMC,IAAN,4CAA+CI,EAA/C,wD,gCC1BX,6CAiBeO,iBAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACf,mCACI,oBAAIC,UAAU,aAAd,SAA4BF,EAAOG,KAAI,SAAAC,GAAI,OACvC,oBAAIF,UAAU,aAAd,SAAyC,cAAC,IAAD,CAAMA,UAAU,OAAOG,GAAI,CAChEC,SAAS,GAAD,OAAKC,IAAOP,OAAZ,YAAsBI,EAAKI,IACnCC,MAAO,CAAEC,KAAMT,IAFsB,SAItCG,EAAKO,kBAJwBP,EAAKI,e,8HCJ3CI,E,4MACFH,MAAQ,CACJI,MAAO,I,uDAGX,WAAqB,IAAD,OAChB3B,cAAmBG,MAAK,SAAAC,GAAG,OAAI,EAAKwB,SAAS,CAAED,MAAOvB,EAAIyB,KAAKC,e,oBAGnE,WAAU,IACEH,EAAUI,KAAKR,MAAfI,MACR,OACI,qCACI,gDACA,cAAC,IAAD,CAAYb,OAAQa,W,GAdbK,aAmBRN","file":"static/js/HomePage.41be8647.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function fetchTrendMovies() {\n    return axios.get(`http://api.themoviedb.org/3/trending/movie/week?api_key=a4de692f1b0678dfae28764090f39212`)\n        .then(res => res)\n}\n\nexport function fetchMoviesDetails(movieId) {\n    return axios.get(`http://api.themoviedb.org/3/movie/${movieId}?api_key=a4de692f1b0678dfae28764090f39212`)\n        .then(res => res)\n}\n\nexport function fetchCurrentMovies(search) {\n    return axios.get(`https://api.themoviedb.org/3/search/movie${search}&api_key=a4de692f1b0678dfae28764090f39212&language=en-US&page=1`)\n        .then(res => res)\n}\n\nexport function fetchMoviesByQuery(inputValue) {\n    return axios.get(`https://api.themoviedb.org/3/search/movie?query=${inputValue}&api_key=a4de692f1b0678dfae28764090f39212&language=en-US&page=1`)\n}\n\nexport function fetchMoviesCast(movieId) {\n    return axios.get(`http://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a4de692f1b0678dfae28764090f39212`)\n}\n\nexport function fetchMoviesReviews(movieId) {\n    return axios.get(`http://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a4de692f1b0678dfae28764090f39212`)\n}\n\n\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport routes from '../../routes'\nimport './MoviesList.scss'\n\nconst MoviesList = ({ movies, location }) => (\n    <>\n        <ul className='MoviesList'>{movies.map(film => (\n            <li className='LinkAnchor' key={film.id}><Link className='Link' to={{\n                pathname: `${routes.movies}/${film.id}`,\n                state: { from: location }\n            }\n            }>{film.original_title}</Link></li>\n        ))}</ul>\n    </>\n)\n\nexport default withRouter(MoviesList);\n\n// withRouter не нужен, так как компонент используется на нескольких страницах","import React, { Component } from 'react'\nimport MoviesList from '../components/MoviesList/MoviesList'\nimport { fetchTrendMovies } from '../services/MoviesApi'\n\nclass HomePage extends Component {\n    state = {\n        films: []\n    }\n\n    componentDidMount() {\n        fetchTrendMovies().then(res => this.setState({ films: res.data.results }))\n    }\n\n    render() {\n        const { films } = this.state\n        return (\n            <>\n                <h1>Trending Today</h1 >\n                <MoviesList movies={films} />\n            </>\n        )\n    }\n}\nexport default HomePage;\n"],"sourceRoot":""}