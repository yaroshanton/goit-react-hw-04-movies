{"version":3,"sources":["components/Reviews.js"],"names":["Reviews","state","results","movieId","this","props","match","params","fetchMoviesReviews","then","res","setState","data","length","map","author","content","id","Component"],"mappings":"0MAGMA,E,4MACFC,MAAQ,CACJC,QAAS,I,uDAGb,WAAqB,IAAD,OACRC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,YAAmBL,GAASM,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAET,QAASQ,EAAIE,KAAKV,e,oBAI9E,WAAU,IACEA,EAAYE,KAAKH,MAAjBC,QACR,OACI,mCACKA,EAAQW,OAAS,EAAK,6BAClBX,EAAQY,KAAI,SAAAJ,GAAG,OACZ,+BACI,4BAAIA,EAAIK,SACR,4BAAIL,EAAIM,YAFHN,EAAIO,SAKZ,gE,GAtBHC,aA4BPlB","file":"static/js/Reviews.5f1e1952.chunk.js","sourcesContent":["import { React, Component } from 'react'\nimport { fetchMoviesReviews } from '../services/MoviesApi'\n\nclass Reviews extends Component {\n    state = {\n        results: []\n    }\n\n    componentDidMount() {\n        const { movieId } = this.props.match.params\n        fetchMoviesReviews(movieId).then(res => this.setState({ results: res.data.results }))\n    }\n\n\n    render() {\n        const { results } = this.state\n        return (\n            <>\n                {results.length > 0 ? (<ul>\n                    {results.map(res =>\n                        <li key={res.id}>\n                            <p>{res.author}</p>\n                            <p>{res.content}</p>\n                        </li>\n                    )}\n                </ul>) : <p>No reviews for this movie</p>}\n            </>\n        )\n    }\n}\n\nexport default Reviews;"],"sourceRoot":""}