{"version":3,"sources":["components/Cast.js"],"names":["Cast","state","cast","movieId","this","props","match","params","fetchMoviesCast","then","res","setState","data","map","className","src","profile_path","alt","name","width","character","cast_id","Component"],"mappings":"0PAIqBA,E,4MACjBC,MAAQ,CACJC,KAAM,I,uDAGV,WAAqB,IAAD,OACRC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,YAAgBL,GAASM,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAET,KAAMQ,EAAIE,KAAKV,Y,oBAIxE,WAAU,IACEA,EAASE,KAAKH,MAAdC,KACR,OACI,mCACKA,EAAKW,KAAI,SAAAH,GAAG,OACT,qBAAII,UAAU,WAAd,UACI,qBAAKC,IAAG,yCAAoCL,EAAIM,cAAgBC,IAAKP,EAAIQ,KAAMC,MAAO,MACtF,4BAAIT,EAAIQ,OACR,4BAAIR,EAAIU,cAHkBV,EAAIW,kB,GAhBpBC,c","file":"static/js/Cast.f63b5e5b.chunk.js","sourcesContent":["import { React, Component } from 'react'\nimport { fetchMoviesCast } from '../services/MoviesApi'\nimport '../styles/Cast.scss'\n\nexport default class Cast extends Component {\n    state = {\n        cast: []\n    }\n\n    componentDidMount() {\n        const { movieId } = this.props.match.params\n        fetchMoviesCast(movieId).then(res => this.setState({ cast: res.data.cast }))\n    }\n\n\n    render() {\n        const { cast } = this.state\n        return (\n            <>\n                {cast.map(res =>\n                    <li className='CastLink' key={res.cast_id}>\n                        <img src={`https://image.tmdb.org/t/p/w500${res.profile_path}`} alt={res.name} width={120} />\n                        <p>{res.name}</p>\n                        <p>{res.character}</p>\n                    </li>\n                )\n                }\n            </>\n        )\n    }\n}"],"sourceRoot":""}