{"version":3,"sources":["services/MoviesApi.js","components/MoviesList/MoviesList.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","views/MoviesPage.js"],"names":["fetchTrendMovies","axios","get","then","res","fetchMoviesDetails","movieId","fetchCurrentMovies","search","fetchMoviesByQuery","inputValue","fetchMoviesCast","fetchMoviesReviews","withRouter","movies","location","className","map","film","to","pathname","routes","id","state","from","original_title","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesPage","handleChange","e","setState","handleSubmit","preventDefault","data","results","props","history","this","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component"],"mappings":"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","file":"static/js/MoviesPage.343bd5dd.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function fetchTrendMovies() {\n    return axios.get(`http://api.themoviedb.org/3/trending/movie/week?api_key=a4de692f1b0678dfae28764090f39212`)\n        .then(res => res)\n}\n\nexport function fetchMoviesDetails(movieId) {\n    return axios.get(`http://api.themoviedb.org/3/movie/${movieId}?api_key=a4de692f1b0678dfae28764090f39212`)\n        .then(res => res)\n}\n\nexport function fetchCurrentMovies(search) {\n    return axios.get(`https://api.themoviedb.org/3/search/movie${search}&api_key=a4de692f1b0678dfae28764090f39212&language=en-US&page=1`)\n        .then(res => res)\n}\n\nexport function fetchMoviesByQuery(inputValue) {\n    return axios.get(`https://api.themoviedb.org/3/search/movie?query=${inputValue}&api_key=a4de692f1b0678dfae28764090f39212&language=en-US&page=1`)\n}\n\nexport function fetchMoviesCast(movieId) {\n    return axios.get(`http://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a4de692f1b0678dfae28764090f39212`)\n}\n\nexport function fetchMoviesReviews(movieId) {\n    return axios.get(`http://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a4de692f1b0678dfae28764090f39212`)\n}\n\n\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport routes from '../../routes'\nimport './MoviesList.scss'\n\nconst MoviesList = ({ movies, location }) => (\n    <>\n        <ul className='MoviesList'>{movies.map(film => (\n            <li className='LinkAnchor' key={film.id}><Link className='Link' to={{\n                pathname: `${routes.movies}/${film.id}`,\n                state: { from: location }\n            }\n            }>{film.original_title}</Link></li>\n        ))}</ul>\n    </>\n)\n\nexport default withRouter(MoviesList);\n\n// withRouter не нужен, так как компонент используется на нескольких страницах","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { React, Component } from 'react'\nimport { fetchCurrentMovies, fetchMoviesByQuery } from '../services/MoviesApi'\nimport MoviesList from '../components/MoviesList/MoviesList'\n\nexport default class MoviesPage extends Component {\n    state = {\n        inputValue: '',\n        movies: []\n    }\n\n    componentDidMount() {\n        const { search } = this.props.location\n        if (search) { fetchCurrentMovies(search).then(res => this.setState({ movies: res.data.results })) }\n    }\n\n\n    handleChange = e => {\n        this.setState({\n            inputValue: e.target.value,\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { inputValue } = this.state\n\n        fetchMoviesByQuery(inputValue).then(res => this.setState({ movies: res.data.results, inputValue: '' }))\n\n        this.props.history.push({\n            ...this.props.location,\n            search: `query=${inputValue}`\n        })\n\n    }\n\n\n    render() {\n        return (\n            <>\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.inputValue}\n                        onChange={this.handleChange}\n                    />\n                </form>\n                <MoviesList movies={this.state.movies} />\n            </>\n        )\n    }\n\n}"],"sourceRoot":""}